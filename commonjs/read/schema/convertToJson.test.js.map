{"version":3,"file":"convertToJson.test.js","names":["date","convertToUTCTimezone","Date","describe","it","getBlock","should","deep","equal","parseArray","convertToJson","parse","getTimezoneOffset","DATE","prop","type","NUMBER","Number","BOOLEAN","Boolean","STRING","String","PHONE","value","PHONE_TYPE","rows","errors","toISOString","number","phone","phoneType","string","required","error","row","column","NAMES","names","INTEGER","Integer","length","reason","URL","EMAIL","Email","NAME","validate","Error","TRUE","FALSE","INVALID","rowMap","STATUS","oneOf","A","B","C","CA","CB","a","b","c","includeNullValues","getTime"],"sources":["../../../source/read/schema/convertToJson.test.js"],"sourcesContent":["import convertToJson, { parseArray, getBlock } from './convertToJson.js'\n\nimport Integer from '../../types/Integer.js'\nimport URL from '../../types/URL.js'\nimport Email from '../../types/Email.js'\n\nconst date = convertToUTCTimezone(new Date(2018, 3 - 1, 24))\n\ndescribe('convertToJson', () => {\n\tit('should parse arrays', () => {\n\t\tgetBlock('abc\"de,f\"g,h', ',', 0).should.deep.equal(['abcde,fg', 10])\n\t\tparseArray(' abc\"de,f\"g  , h ').should.deep.equal(['abcde,fg', 'h'])\n\t})\n\n\tit('should convert to json', () => {\n\t\tconst { rows, errors } = convertToJson([\n\t\t\t[\n\t\t\t\t'DATE',\n\t\t\t\t'NUMBER',\n\t\t\t\t'BOOLEAN',\n\t\t\t\t'STRING',\n\t\t\t\t'PHONE',\n\t\t\t\t'PHONE_TYPE'\n\t\t\t], [\n\t\t\t\tnew Date(Date.parse('03/24/2018') - new Date().getTimezoneOffset() * 60 * 1000), // '43183', // '03/24/2018',\n\t\t\t\t'123',\n\t\t\t\ttrue,\n\t\t\t\t'abc',\n\t\t\t\t'(123) 456-7890',\n\t\t\t\t'(123) 456-7890'\n\t\t\t]\n\t\t], {\n\t\t\tDATE: {\n\t\t\t\tprop: 'date',\n\t\t\t\ttype: Date\n\t\t\t},\n\t\t\tNUMBER: {\n\t\t\t\tprop: 'number',\n\t\t\t\ttype: Number\n\t\t\t},\n\t\t\tBOOLEAN: {\n\t\t\t\tprop: 'boolean',\n\t\t\t\ttype: Boolean\n\t\t\t},\n\t\t\tSTRING: {\n\t\t\t\tprop: 'string',\n\t\t\t\ttype: String\n\t\t\t},\n\t\t\tPHONE: {\n\t\t\t\tprop: 'phone',\n\t\t\t\tparse(value) {\n\t\t\t\t\treturn '+11234567890'\n\t\t\t\t}\n\t\t\t},\n\t\t\tPHONE_TYPE: {\n\t\t\t\tprop: 'phoneType',\n\t\t\t\ttype(value) {\n\t\t\t\t\treturn '+11234567890'\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\terrors.should.deep.equal([])\n\n\t\t// Convert `Date` to `String` for equality check.\n\t\trows[0].date = rows[0].date.toISOString()\n\n\t\trows.should.deep.equal([{\n\t\t\tdate: date.toISOString(),\n\t\t\tnumber: 123,\n\t\t\tphone: '+11234567890',\n\t\t\tphoneType: '+11234567890',\n\t\t\tboolean: true,\n\t\t\tstring: 'abc'\n\t\t}])\n\t})\n\n\tit('should support schema entries with no `type`s', () => {\n\t\tconst { rows, errors } = convertToJson([\n\t\t\t[\n\t\t\t\t'DATE',\n\t\t\t\t'NUMBER',\n\t\t\t\t'BOOLEAN',\n\t\t\t\t'STRING'\n\t\t\t], [\n\t\t\t\tnew Date(Date.parse('03/24/2018') - new Date().getTimezoneOffset() * 60 * 1000), // '43183', // '03/24/2018',\n\t\t\t\t123,\n\t\t\t\ttrue,\n\t\t\t\t'abc'\n\t\t\t]\n\t\t], {\n\t\t\tDATE: {\n\t\t\t\tprop: 'date'\n\t\t\t},\n\t\t\tNUMBER: {\n\t\t\t\tprop: 'number'\n\t\t\t},\n\t\t\tBOOLEAN: {\n\t\t\t\tprop: 'boolean'\n\t\t\t},\n\t\t\tSTRING: {\n\t\t\t\tprop: 'string'\n\t\t\t}\n\t\t})\n\n\t\terrors.should.deep.equal([])\n\n\t\t// Convert `Date` to `String` for equality check.\n\t\trows[0].date = rows[0].date.toISOString()\n\n\t\trows.should.deep.equal([{\n\t\t\tdate: date.toISOString(),\n\t\t\tnumber: 123,\n\t\t\tboolean: true,\n\t\t\tstring: 'abc'\n\t\t}])\n\t})\n\n\tit('should require fields', () => {\n\t\tconst { rows, errors } = convertToJson([\n\t\t\t[\n\t\t\t\t'NUMBER'\n\t\t\t], [\n\t\t\t\tnull\n\t\t\t]\n\t\t], {\n\t\t\tNUMBER: {\n\t\t\t\tprop: 'number',\n\t\t\t\ttype: Number,\n\t\t\t\trequired: true\n\t\t\t}\n\t\t})\n\n\t\terrors.should.deep.equal([{\n\t\t\terror: 'required',\n\t\t\trow: 2,\n\t\t\tcolumn: 'NUMBER',\n\t\t\ttype: Number,\n\t\t\tvalue: null\n\t\t}])\n\n\t\trows.should.deep.equal([])\n\t})\n\n\tit('should parse arrays', () => {\n\t\tconst { rows, errors } = convertToJson([\n\t\t\t[\n\t\t\t\t'NAMES'\n\t\t\t], [\n\t\t\t\t'Barack Obama, \"String, with, colons\", Donald Trump'\n\t\t\t], [\n\t\t\t\tnull\n\t\t\t]\n\t\t], {\n\t\t\tNAMES: {\n\t\t\t\tprop: 'names',\n\t\t\t\ttype: [String]\n\t\t\t}\n\t\t})\n\n\t\terrors.should.deep.equal([])\n\n\t\trows.should.deep.equal([{\n\t\t\tnames: ['Barack Obama', 'String, with, colons', 'Donald Trump']\n\t\t}])\n\t})\n\n\tit('should parse integers', () =>\n\t{\n\t\tconst { rows, errors } = convertToJson([\n\t\t\t[\n\t\t\t\t'INTEGER'\n\t\t\t], [\n\t\t\t\t'1'\n\t\t\t], [\n\t\t\t\t'1.2'\n\t\t\t]\n\t\t], {\n\t\t\tINTEGER: {\n\t\t\t\tprop: 'value',\n\t\t\t\ttype: Integer\n\t\t\t}\n\t\t})\n\n\t\terrors.length.should.equal(1)\n\t\terrors[0].should.deep.equal({\n\t\t\terror: 'invalid',\n\t\t\treason: 'not_an_integer',\n\t\t\trow: 3,\n\t\t\tcolumn: 'INTEGER',\n\t\t\ttype: Integer,\n\t\t\tvalue: '1.2'\n\t\t})\n\n\t\trows.should.deep.equal([{\n\t\t\tvalue: 1\n\t\t}])\n\t})\n\n\tit('should parse URLs', () =>\n\t{\n\t\tconst { rows, errors } = convertToJson([\n\t\t\t[\n\t\t\t\t'URL'\n\t\t\t], [\n\t\t\t\t'https://kremlin.ru'\n\t\t\t], [\n\t\t\t\t'kremlin.ru'\n\t\t\t]\n\t\t], {\n\t\t\tURL: {\n\t\t\t\tprop: 'value',\n\t\t\t\ttype: URL\n\t\t\t}\n\t\t})\n\n\t\terrors.length.should.equal(1)\n\t\terrors[0].row.should.equal(3)\n\t\terrors[0].column.should.equal('URL')\n\t\terrors[0].error.should.equal('invalid')\n\n\t\trows.should.deep.equal([{\n\t\t\tvalue: 'https://kremlin.ru'\n\t\t}])\n\t})\n\n\tit('should parse Emails', () =>\n\t{\n\t\tconst { rows, errors } = convertToJson([\n\t\t\t[\n\t\t\t\t'EMAIL'\n\t\t\t], [\n\t\t\t\t'vladimir.putin@kremlin.ru'\n\t\t\t], [\n\t\t\t\t'123'\n\t\t\t]\n\t\t], {\n\t\t\tEMAIL: {\n\t\t\t\tprop: 'value',\n\t\t\t\ttype: Email\n\t\t\t}\n\t\t})\n\n\t\terrors.length.should.equal(1)\n\t\terrors[0].row.should.equal(3)\n\t\terrors[0].column.should.equal('EMAIL')\n\t\terrors[0].error.should.equal('invalid')\n\n\t\trows.should.deep.equal([{\n\t\t\tvalue: 'vladimir.putin@kremlin.ru'\n\t\t}])\n\t})\n\n\tit('should call .validate()', () => {\n\t\tconst { rows, errors } = convertToJson([\n\t\t\t[\n\t\t\t\t'NAME'\n\t\t\t], [\n\t\t\t\t'George Bush'\n\t\t\t]\n\t\t], {\n\t\t\tNAME: {\n\t\t\t\tprop: 'name',\n\t\t\t\ttype: String,\n\t\t\t\trequired: true,\n\t\t\t\tvalidate: (value) => {\n\t\t\t\t\tif (value === 'George Bush') {\n\t\t\t\t\t\tthrow new Error('custom-error')\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\terrors.should.deep.equal([{\n\t\t\terror: 'custom-error',\n\t\t\trow: 2,\n\t\t\tcolumn: 'NAME',\n\t\t\ttype: String,\n\t\t\tvalue: 'George Bush'\n\t\t}])\n\n\t\trows.should.deep.equal([])\n\t})\n\n\tit('should validate numbers', () => {\n\t\tconst { rows, errors } = convertToJson([\n\t\t\t[\n\t\t\t\t'NUMBER'\n\t\t\t], [\n\t\t\t\t'123abc'\n\t\t\t]\n\t\t], {\n\t\t\tNUMBER: {\n\t\t\t\tprop: 'number',\n\t\t\t\ttype: Number,\n\t\t\t\trequired: true\n\t\t\t}\n\t\t})\n\n\t\terrors.should.deep.equal([{\n\t\t\terror: 'invalid',\n\t\t\treason: 'not_a_number',\n\t\t\trow: 2,\n\t\t\tcolumn: 'NUMBER',\n\t\t\ttype: Number,\n\t\t\tvalue: '123abc'\n\t\t}])\n\n\t\trows.should.deep.equal([])\n\t})\n\n\tit('should validate booleans', () => {\n\t\tconst { rows, errors } = convertToJson([\n\t\t\t[\n\t\t\t\t'TRUE',\n\t\t\t\t'FALSE',\n\t\t\t\t'INVALID'\n\t\t\t], [\n\t\t\t\ttrue,\n\t\t\t\tfalse,\n\t\t\t\t'TRUE'\n\t\t\t]\n\t\t], {\n\t\t\tTRUE: {\n\t\t\t\tprop: 'true',\n\t\t\t\ttype: Boolean,\n\t\t\t\trequired: true\n\t\t\t},\n\t\t\tFALSE: {\n\t\t\t\tprop: 'false',\n\t\t\t\ttype: Boolean,\n\t\t\t\trequired: true\n\t\t\t},\n\t\t\tINVALID: {\n\t\t\t\tprop: 'invalid',\n\t\t\t\ttype: Boolean,\n\t\t\t\trequired: true\n\t\t\t}\n\t\t})\n\n\t\terrors.should.deep.equal([{\n\t\t\terror: 'invalid',\n\t\t\treason: 'not_a_boolean',\n\t\t\trow: 2,\n\t\t\tcolumn: 'INVALID',\n\t\t\ttype: Boolean,\n\t\t\tvalue: 'TRUE'\n\t\t}])\n\n\t\trows.should.deep.equal([{\n\t\t\ttrue: true,\n\t\t\tfalse: false\n\t\t}])\n\t})\n\n\tit('should validate dates', () => {\n\t\tconst { rows, errors } = convertToJson([\n\t\t\t[\n\t\t\t\t'DATE',\n\t\t\t\t'INVALID'\n\t\t\t], [\n\t\t\t\t43183, // 03/24/2018',\n\t\t\t\t'-'\n\t\t\t], [\n\t\t\t\tdate, // 03/24/2018',,\n\t\t\t\t'-'\n\t\t\t]\n\t\t], {\n\t\t\tDATE: {\n\t\t\t\tprop: 'date',\n\t\t\t\ttype: Date,\n\t\t\t\trequired: true\n\t\t\t},\n\t\t\tINVALID: {\n\t\t\t\tprop: 'invalid',\n\t\t\t\ttype: Date,\n\t\t\t\trequired: true\n\t\t\t}\n\t\t})\n\n\t\terrors.should.deep.equal([{\n\t\t\terror: 'invalid',\n\t\t\treason: 'not_a_date',\n\t\t\trow: 2,\n\t\t\tcolumn: 'INVALID',\n\t\t\ttype: Date,\n\t\t\tvalue: '-'\n\t\t}, {\n\t\t\terror: 'invalid',\n\t\t\treason: 'not_a_date',\n\t\t\trow: 3,\n\t\t\tcolumn: 'INVALID',\n\t\t\ttype: Date,\n\t\t\tvalue: '-'\n\t\t}])\n\n\t\trows.should.deep.equal([{\n\t\t\tdate\n\t\t}, {\n\t\t\tdate\n\t\t}])\n\t})\n\n\tit('should throw parse() errors', () => {\n\t\tconst { rows, errors } = convertToJson([\n\t\t\t[\n\t\t\t\t'PHONE',\n\t\t\t\t'PHONE_TYPE'\n\t\t\t], [\n\t\t\t\t'123',\n\t\t\t\t'123'\n\t\t\t]\n\t\t], {\n\t\t\tPHONE: {\n\t\t\t\tprop: 'phone',\n\t\t\t\tparse: () => {\n\t\t\t\t\tthrow new Error('invalid')\n\t\t\t\t}\n\t\t\t},\n\t\t\tPHONE_TYPE: {\n\t\t\t\tprop: 'phoneType',\n\t\t\t\tparse: () => {\n\t\t\t\t\tthrow new Error('invalid')\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\terrors.should.deep.equal([{\n\t\t\terror: 'invalid',\n\t\t\trow: 2,\n\t\t\tcolumn: 'PHONE',\n\t\t\tvalue: '123'\n\t\t}, {\n\t\t\terror: 'invalid',\n\t\t\trow: 2,\n\t\t\tcolumn: 'PHONE_TYPE',\n\t\t\tvalue: '123'\n\t\t}])\n\n\t\trows.should.deep.equal([])\n\t})\n\n\tit('should map row numbers', () => {\n\t\tconst { rows, errors } = convertToJson([\n\t\t\t[\n\t\t\t\t'NUMBER'\n\t\t\t], [\n\t\t\t\t'123abc'\n\t\t\t]\n\t\t], {\n\t\t\tNUMBER: {\n\t\t\t\tprop: 'number',\n\t\t\t\ttype: Number\n\t\t\t}\n\t\t}, {\n\t\t\trowMap: [2, 5]\n\t\t})\n\n\t\terrors.should.deep.equal([{\n\t\t\terror: 'invalid',\n\t\t\treason: 'not_a_number',\n\t\t\trow: 6,\n\t\t\tcolumn: 'NUMBER',\n\t\t\ttype: Number,\n\t\t\tvalue: '123abc'\n\t\t}])\n\t})\n\n\tit('should validate \"oneOf\" (valid)', () => {\n\t\tconst { rows, errors } = convertToJson([\n\t\t\t[\n\t\t\t\t'STATUS'\n\t\t\t],\n\t\t\t[\n\t\t\t\t'STARTED'\n\t\t\t]\n\t\t], {\n\t\t\tSTATUS: {\n\t\t\t\tprop: 'status',\n\t\t\t\ttype: String,\n\t\t\t\toneOf: [\n\t\t\t\t\t'STARTED',\n\t\t\t\t\t'FINISHED'\n\t\t\t\t]\n\t\t\t}\n\t\t})\n\n\t\terrors.length.should.equal(0)\n\t})\n\n\tit('should validate \"oneOf\" (not valid)', () => {\n\t\tconst { rows, errors } = convertToJson([\n\t\t\t[\n\t\t\t\t'STATUS'\n\t\t\t],\n\t\t\t[\n\t\t\t\t'SCHEDULED'\n\t\t\t]\n\t\t], {\n\t\t\tSTATUS: {\n\t\t\t\tprop: 'status',\n\t\t\t\ttype: String,\n\t\t\t\toneOf: [\n\t\t\t\t\t'STARTED',\n\t\t\t\t\t'FINISHED'\n\t\t\t\t]\n\t\t\t}\n\t\t})\n\n\t\terrors.should.deep.equal([{\n\t\t\terror: 'invalid',\n\t\t\treason: 'unknown',\n\t\t\trow: 2,\n\t\t\tcolumn: 'STATUS',\n\t\t\ttype: String,\n\t\t\tvalue: 'SCHEDULED'\n\t\t}])\n\t})\n\n\tit('should not include `null` values by default', function() {\n\t\tconst { rows } = convertToJson(\n\t\t\t[\n\t\t\t\t['A', 'B', 'CA', 'CB'],\n\t\t\t\t['a', 'b', 'ca', null],\n\t\t\t\t['a', null]\n\t\t\t],\n\t\t\t{\n\t\t\t\tA: {\n\t\t\t\t\tprop: 'a',\n\t\t\t\t\ttype: String\n\t\t\t\t},\n\t\t\t\tB: {\n\t\t\t\t\tprop: 'b',\n\t\t\t\t\ttype: String\n\t\t\t\t},\n\t\t\t\tC: {\n\t\t\t\t\tprop: 'c',\n    \t\t\ttype: {\n\t\t\t\t\t\tCA: {\n\t\t\t\t\t\t\tprop: 'a',\n\t\t\t\t\t\t\ttype: String\n\t\t\t\t\t\t},\n\t\t\t\t\t\tCB: {\n\t\t\t\t\t\t\tprop: 'b',\n\t\t\t\t\t\t\ttype: String\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t)\n\n\t\trows.should.deep.equal([\n\t\t\t{ a: 'a', b: 'b', c: { a: 'ca' } },\n\t\t\t{ a: 'a' },\n\t\t])\n\t})\n\n\tit('should include `null` values when `includeNullValues: true` option is passed', function() {\n\t\tconst { rows } = convertToJson(\n\t\t\t[\n\t\t\t\t['A', 'B', 'CA', 'CB'],\n\t\t\t\t['a', 'b', 'ca', null],\n\t\t\t\t['a', null]\n\t\t\t],\n\t\t\t{\n\t\t\t\tA: {\n\t\t\t\t\tprop: 'a',\n\t\t\t\t\ttype: String\n\t\t\t\t},\n\t\t\t\tB: {\n\t\t\t\t\tprop: 'b',\n\t\t\t\t\ttype: String\n\t\t\t\t},\n\t\t\t\tC: {\n\t\t\t\t\tprop: 'c',\n    \t\t\ttype: {\n\t\t\t\t\t\tCA: {\n\t\t\t\t\t\t\tprop: 'a',\n\t\t\t\t\t\t\ttype: String\n\t\t\t\t\t\t},\n\t\t\t\t\t\tCB: {\n\t\t\t\t\t\t\tprop: 'b',\n\t\t\t\t\t\t\ttype: String\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tincludeNullValues: true\n\t\t\t}\n\t\t)\n\n\t\trows.should.deep.equal([\n\t\t\t{ a: 'a', b: 'b', c: { a: 'ca', b: null } },\n\t\t\t{ a: 'a', b: null, c: null },\n\t\t])\n\t})\n})\n\n// Converts timezone to UTC while preserving the same time\nfunction convertToUTCTimezone(date) {\n\t// Doesn't account for leap seconds but I guess that's ok\n\t// given that javascript's own `Date()` does not either.\n\t// https://www.timeanddate.com/time/leap-seconds-background.html\n\t//\n\t// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Date/getTimezoneOffset\n\t//\n\treturn new Date(date.getTime() - date.getTimezoneOffset() * 60 * 1000)\n}\n"],"mappings":"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"}