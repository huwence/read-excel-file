{"version":3,"file":"dropEmptyRows.js","names":["dropEmptyRows","data","rowMap","accessor","_","onlyTrimAtTheEnd","i","length","empty","cell","splice"],"sources":["../../source/read/dropEmptyRows.js"],"sourcesContent":["export default function dropEmptyRows(data, {\n  rowMap,\n  accessor = _ => _,\n  onlyTrimAtTheEnd\n} = {}) {\n  // Drop empty rows.\n  let i = data.length - 1\n  while (i >= 0) {\n    // Check if the row is empty.\n    let empty = true\n    for (const cell of data[i]) {\n      if (accessor(cell) !== null) {\n        empty = false\n        break\n      }\n    }\n    // Remove the empty row.\n    if (empty) {\n      data.splice(i, 1)\n      if (rowMap) {\n        rowMap.splice(i, 1)\n      }\n    } else if (onlyTrimAtTheEnd) {\n      break\n    }\n    i--\n  }\n  return data\n}"],"mappings":";;;AAAA,eAAe,SAASA,aAAa,CAACC,IAAI,EAIlC;EAAA,+EAAJ,CAAC,CAAC;IAHJC,MAAM,QAANA,MAAM;IAAA,qBACNC,QAAQ;IAARA,QAAQ,8BAAG,UAAAC,CAAC;MAAA,OAAIA,CAAC;IAAA;IACjBC,gBAAgB,QAAhBA,gBAAgB;EAEhB;EACA,IAAIC,CAAC,GAAGL,IAAI,CAACM,MAAM,GAAG,CAAC;EACvB,OAAOD,CAAC,IAAI,CAAC,EAAE;IACb;IACA,IAAIE,KAAK,GAAG,IAAI;IAChB,qDAAmBP,IAAI,CAACK,CAAC,CAAC,wCAAE;MAAA,IAAjBG,IAAI;MACb,IAAIN,QAAQ,CAACM,IAAI,CAAC,KAAK,IAAI,EAAE;QAC3BD,KAAK,GAAG,KAAK;QACb;MACF;IACF;IACA;IACA,IAAIA,KAAK,EAAE;MACTP,IAAI,CAACS,MAAM,CAACJ,CAAC,EAAE,CAAC,CAAC;MACjB,IAAIJ,MAAM,EAAE;QACVA,MAAM,CAACQ,MAAM,CAACJ,CAAC,EAAE,CAAC,CAAC;MACrB;IACF,CAAC,MAAM,IAAID,gBAAgB,EAAE;MAC3B;IACF;IACAC,CAAC,EAAE;EACL;EACA,OAAOL,IAAI;AACb"}