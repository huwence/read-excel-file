{"version":3,"file":"getData.js","names":["dropEmptyRows","dropEmptyColumns","getData","sheet","options","dimensions","cells","length","leftTop","rightBottom","colsCount","column","rowsCount","row","data","Array","i","j","cell","rowIndex","columnIndex","value","rowMap","onlyTrimAtTheEnd","transformData"],"sources":["../../source/read/getData.js"],"sourcesContent":["import dropEmptyRows from './dropEmptyRows.js'\nimport dropEmptyColumns from './dropEmptyColumns.js'\n\nexport default function getData(sheet, options) {\n  const { dimensions, cells } = sheet\n\n  // If the sheet is empty.\n  if (cells.length === 0) {\n    return []\n  }\n\n  const [leftTop, rightBottom] = dimensions\n\n  // Don't discard empty rows or columns at the start.\n  // https://github.com/catamphetamine/read-excel-file/issues/102\n  // const colsCount = (rightBottom.column - leftTop.column) + 1\n  // const rowsCount = (rightBottom.row - leftTop.row) + 1\n\n  const colsCount = rightBottom.column\n  const rowsCount = rightBottom.row\n\n  // Initialize spreadsheet data structure.\n  let data = new Array(rowsCount)\n  let i = 0\n  while (i < rowsCount) {\n    data[i] = new Array(colsCount)\n    let j = 0\n    while (j < colsCount) {\n      data[i][j] = null\n      j++\n    }\n    i++\n  }\n\n  // Fill in spreadsheet `data`.\n  // (this code implies that `cells` aren't necessarily sorted by row and column:\n  //  maybe that's not correct, this piece code was initially copy-pasted\n  //  from some other library that used `XPath`)\n  for (const cell of cells) {\n    // Don't discard empty rows or columns at the start.\n    // https://github.com/catamphetamine/read-excel-file/issues/102\n    // const rowIndex = cell.row - leftTop.row\n    // const columnIndex = cell.column - leftTop.column\n    const rowIndex = cell.row - 1\n    const columnIndex = cell.column - 1\n    // Ignore the data in the cell if it's outside of the spreadsheet's \"dimensions\".\n    if (columnIndex < colsCount && rowIndex < rowsCount) {\n      data[rowIndex][columnIndex] = cell.value\n    }\n  }\n\n  // Fill in the row map.\n  const { rowMap } = options\n  if (rowMap) {\n    let i = 0\n    while (i < data.length) {\n      rowMap[i] = i\n      i++\n    }\n  }\n\n  // Drop empty columns or rows.\n  data = dropEmptyRows(\n    dropEmptyColumns(data, { onlyTrimAtTheEnd: true }),\n    { onlyTrimAtTheEnd: true, rowMap }\n  )\n\n  // Optionally transform data before applying `schema`.\n  if (options.transformData) {\n    data = options.transformData(data)\n    // data = options.transformData(data, {\n    //   dropEmptyRowsAndColumns(data) {\n    //     return dropEmptyRows(dropEmptyColumns(data), { rowMap })\n    //   }\n    // })\n  }\n\n  return data\n}"],"mappings":";;;;;;;AAAA,OAAOA,aAAa,MAAM,oBAAoB;AAC9C,OAAOC,gBAAgB,MAAM,uBAAuB;AAEpD,eAAe,SAASC,OAAO,CAACC,KAAK,EAAEC,OAAO,EAAE;EAC9C,IAAQC,UAAU,GAAYF,KAAK,CAA3BE,UAAU;IAAEC,KAAK,GAAKH,KAAK,CAAfG,KAAK;;EAEzB;EACA,IAAIA,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;IACtB,OAAO,EAAE;EACX;EAEA,iCAA+BF,UAAU;IAAlCG,OAAO;IAAEC,WAAW;;EAE3B;EACA;EACA;EACA;;EAEA,IAAMC,SAAS,GAAGD,WAAW,CAACE,MAAM;EACpC,IAAMC,SAAS,GAAGH,WAAW,CAACI,GAAG;;EAEjC;EACA,IAAIC,IAAI,GAAG,IAAIC,KAAK,CAACH,SAAS,CAAC;EAC/B,IAAII,CAAC,GAAG,CAAC;EACT,OAAOA,CAAC,GAAGJ,SAAS,EAAE;IACpBE,IAAI,CAACE,CAAC,CAAC,GAAG,IAAID,KAAK,CAACL,SAAS,CAAC;IAC9B,IAAIO,CAAC,GAAG,CAAC;IACT,OAAOA,CAAC,GAAGP,SAAS,EAAE;MACpBI,IAAI,CAACE,CAAC,CAAC,CAACC,CAAC,CAAC,GAAG,IAAI;MACjBA,CAAC,EAAE;IACL;IACAD,CAAC,EAAE;EACL;;EAEA;EACA;EACA;EACA;EACA,qDAAmBV,KAAK,wCAAE;IAAA,IAAfY,IAAI;IACb;IACA;IACA;IACA;IACA,IAAMC,QAAQ,GAAGD,IAAI,CAACL,GAAG,GAAG,CAAC;IAC7B,IAAMO,WAAW,GAAGF,IAAI,CAACP,MAAM,GAAG,CAAC;IACnC;IACA,IAAIS,WAAW,GAAGV,SAAS,IAAIS,QAAQ,GAAGP,SAAS,EAAE;MACnDE,IAAI,CAACK,QAAQ,CAAC,CAACC,WAAW,CAAC,GAAGF,IAAI,CAACG,KAAK;IAC1C;EACF;;EAEA;EACA,IAAQC,MAAM,GAAKlB,OAAO,CAAlBkB,MAAM;EACd,IAAIA,MAAM,EAAE;IACV,IAAIN,GAAC,GAAG,CAAC;IACT,OAAOA,GAAC,GAAGF,IAAI,CAACP,MAAM,EAAE;MACtBe,MAAM,CAACN,GAAC,CAAC,GAAGA,GAAC;MACbA,GAAC,EAAE;IACL;EACF;;EAEA;EACAF,IAAI,GAAGd,aAAa,CAClBC,gBAAgB,CAACa,IAAI,EAAE;IAAES,gBAAgB,EAAE;EAAK,CAAC,CAAC,EAClD;IAAEA,gBAAgB,EAAE,IAAI;IAAED,MAAM,EAANA;EAAO,CAAC,CACnC;;EAED;EACA,IAAIlB,OAAO,CAACoB,aAAa,EAAE;IACzBV,IAAI,GAAGV,OAAO,CAACoB,aAAa,CAACV,IAAI,CAAC;IAClC;IACA;IACA;IACA;IACA;EACF;;EAEA,OAAOA,IAAI;AACb"}