{"version":3,"file":"parseStyles.js","names":["getBaseStyles","getCellStyles","getNumberFormats","parseStyles","content","xml","doc","createDocument","baseStyles","map","parseCellStyle","numberFormats","parseNumberFormatStyle","reduce","formats","format","id","getCellStyle","xf","hasAttribute","xfId","numFmt","getAttribute","template","numFmts","style","numberFormatId","numberFormat"],"sources":["../../source/read/parseStyles.js"],"sourcesContent":["import {\n  getBaseStyles,\n  getCellStyles,\n  getNumberFormats\n} from '../xml/xlsx.js'\n\n// http://officeopenxml.com/SSstyles.php\n// Returns an array of cell styles.\n// A cell style index is its ID.\nexport default function parseStyles(content, xml) {\n  if (!content) {\n    return {}\n  }\n\n  // https://social.msdn.microsoft.com/Forums/sqlserver/en-US/708978af-b598-45c4-a598-d3518a5a09f0/howwhen-is-cellstylexfs-vs-cellxfs-applied-to-a-cell?forum=os_binaryfile\n  // https://www.office-forums.com/threads/cellxfs-cellstylexfs.2163519/\n  const doc = xml.createDocument(content)\n\n  const baseStyles = getBaseStyles(doc)\n    .map(parseCellStyle)\n\n  const numberFormats = getNumberFormats(doc)\n    .map(parseNumberFormatStyle)\n    .reduce((formats, format) => {\n      // Format ID is a numeric index.\n      // There're some standard \"built-in\" formats (in Excel) up to about `100`.\n      formats[format.id] = format\n      return formats\n    }, [])\n\n  const getCellStyle = (xf) => {\n    if (xf.hasAttribute('xfId')) {\n      return {\n        ...baseStyles[xf.xfId],\n        ...parseCellStyle(xf, numberFormats)\n      }\n    }\n    return parseCellStyle(xf, numberFormats)\n  }\n\n  return getCellStyles(doc).map(getCellStyle)\n}\n\nfunction parseNumberFormatStyle(numFmt) {\n  return {\n    id: numFmt.getAttribute('numFmtId'),\n    template: numFmt.getAttribute('formatCode')\n  }\n}\n\n// http://www.datypic.com/sc/ooxml/e-ssml_xf-2.html\nfunction parseCellStyle(xf, numFmts) {\n  const style = {}\n  if (xf.hasAttribute('numFmtId')) {\n    const numberFormatId = xf.getAttribute('numFmtId')\n    // Built-in number formats don't have a `<numFmt/>` element in `styles.xml`.\n    // https://hexdocs.pm/xlsxir/number_styles.html\n    if (numFmts[numberFormatId]) {\n      style.numberFormat = numFmts[numberFormatId]\n    } else {\n      style.numberFormat = { id: numberFormatId }\n    }\n  }\n  return style\n}"],"mappings":";;;AAAA,SACEA,aAAa,EACbC,aAAa,EACbC,gBAAgB,QACX,gBAAgB;;AAEvB;AACA;AACA;AACA,eAAe,SAASC,WAAW,CAACC,OAAO,EAAEC,GAAG,EAAE;EAChD,IAAI,CAACD,OAAO,EAAE;IACZ,OAAO,CAAC,CAAC;EACX;;EAEA;EACA;EACA,IAAME,GAAG,GAAGD,GAAG,CAACE,cAAc,CAACH,OAAO,CAAC;EAEvC,IAAMI,UAAU,GAAGR,aAAa,CAACM,GAAG,CAAC,CAClCG,GAAG,CAACC,cAAc,CAAC;EAEtB,IAAMC,aAAa,GAAGT,gBAAgB,CAACI,GAAG,CAAC,CACxCG,GAAG,CAACG,sBAAsB,CAAC,CAC3BC,MAAM,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAK;IAC3B;IACA;IACAD,OAAO,CAACC,MAAM,CAACC,EAAE,CAAC,GAAGD,MAAM;IAC3B,OAAOD,OAAO;EAChB,CAAC,EAAE,EAAE,CAAC;EAER,IAAMG,YAAY,GAAG,SAAfA,YAAY,CAAIC,EAAE,EAAK;IAC3B,IAAIA,EAAE,CAACC,YAAY,CAAC,MAAM,CAAC,EAAE;MAC3B,uCACKX,UAAU,CAACU,EAAE,CAACE,IAAI,CAAC,GACnBV,cAAc,CAACQ,EAAE,EAAEP,aAAa,CAAC;IAExC;IACA,OAAOD,cAAc,CAACQ,EAAE,EAAEP,aAAa,CAAC;EAC1C,CAAC;EAED,OAAOV,aAAa,CAACK,GAAG,CAAC,CAACG,GAAG,CAACQ,YAAY,CAAC;AAC7C;AAEA,SAASL,sBAAsB,CAACS,MAAM,EAAE;EACtC,OAAO;IACLL,EAAE,EAAEK,MAAM,CAACC,YAAY,CAAC,UAAU,CAAC;IACnCC,QAAQ,EAAEF,MAAM,CAACC,YAAY,CAAC,YAAY;EAC5C,CAAC;AACH;;AAEA;AACA,SAASZ,cAAc,CAACQ,EAAE,EAAEM,OAAO,EAAE;EACnC,IAAMC,KAAK,GAAG,CAAC,CAAC;EAChB,IAAIP,EAAE,CAACC,YAAY,CAAC,UAAU,CAAC,EAAE;IAC/B,IAAMO,cAAc,GAAGR,EAAE,CAACI,YAAY,CAAC,UAAU,CAAC;IAClD;IACA;IACA,IAAIE,OAAO,CAACE,cAAc,CAAC,EAAE;MAC3BD,KAAK,CAACE,YAAY,GAAGH,OAAO,CAACE,cAAc,CAAC;IAC9C,CAAC,MAAM;MACLD,KAAK,CAACE,YAAY,GAAG;QAAEX,EAAE,EAAEU;MAAe,CAAC;IAC7C;EACF;EACA,OAAOD,KAAK;AACd"}